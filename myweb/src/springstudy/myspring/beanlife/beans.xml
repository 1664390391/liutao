<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="otherbean" class="springstudy.myspring.beanlife.OtherBean">
        <property name="name" value="wangcai"></property>
    </bean>

    <!-- init-method="myinit" destroy-method="mydestroy" 自定义一些自己的小玩意方法 -->
    <bean id="beanDemo" init-method="myinit" destroy-method="mydestroy" class="springstudy.myspring.beanlife.BeanDemo">
        <property name="name" value="#{otherbean.name}"/>
    </bean>

    <!--<bean id="BeanDemo2" scope="prototype" class="BeanDemo">-->
        <!--<property name="name" value="wangcai2"/>-->
    <!--</bean>-->

    <!-- 关联后置处理器，使用aop思想对每一个实例化的bean进行统一的操作/处理 ,直接配置，IOC容器会识别并自动加载-->
    <bean id="myBeanPostProcessor"  class="springstudy.myspring.beanlife.MyBeanPostProcessor"/>

    <!-- 测试通过构造函数注入值 -->
  <!--  <bean id="beanDemo" class="springstudy.myspring.beanlife.BeanDemo">
        <constructor-arg index="0" type="java.lang.String" value="我的" />
    </bean>-->
</beans>