<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- 配置需要扫描所有注解的包 -->
    <context:component-scan base-package="springstudy.myspringmvc"></context:component-scan>

    <!-- 配置视图解析器。如何把控制层中的方法返回值解析为实际的物理视图 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前后缀 -->
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 配置自定义视图解析器,默认是视图解析器优先级最低，这边随便配置都可以 -->
    <bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1"></property>
    </bean>


    <!-- 配置国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="springstudy.myspringmvc.i18n"></property>
    </bean>


    <!-- 配置直接可以转发的页面，无需经过handler的方法 ，但是仅仅配这个正常经过处理器的方法就不能够使用了-->
    <!-- path:浏览器的路径  view-name： 项目中的页面-->
    <mvc:view-controller path="/success" view-name="firsttest/success"></mvc:view-controller>

    <!--
    Spring MVC 处理静态资源请求：配置一个属性，对非映射请求进行默认处理。
    该配置会在Spring MVC上下文中定义一个DefaultServletHttpRequestHandler，会对进入DispatcherServlet的请求进行筛查，
    如果发现是没有经过映射的请求（例如静态资源），那么会将该请求交由WEB应用服务器默认的Servlet处理，
    如果是正常的请求方式，则继续由DispatcherServlet处理
    -->
    <mvc:default-servlet-handler/>

    <!-- 接上：所以实际开发中，通常需要配置<mvc:annotation-driven -->
    <mvc:annotation-driven ></mvc:annotation-driven>

</beans>