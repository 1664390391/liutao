<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 扫描注解 -->
    <context:component-scan base-package="springstudy.myspring4.jdbcbyanno"></context:component-scan>
    <!--spring2.5之后配置方式,导入资源文件 -->
    <context:property-placeholder location="classpath:springstudy/myspring4/jdbcbyanno/db.properties" />

    <!-- 配置bean -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.dirverClass}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="user" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
        <property name="initialPoolSize" value="${db.initPoolSize}"/>
        <property name="maxPoolSize" value="${db.maxPoolSize}"/>
     </bean>

    <!-- 配置Spring链接jdbc的模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 使用xml文件的方式配置事务 -->
    <!-- 将service和dao（这里没有dao层）相关bean实例配置进来 -->
    <bean id="jdbcServiceImpl" class="springstudy.myspring4.jdbcbyxml.JdbcServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>


    <!-- 1、配置事务管理器,整合其他orm框架的时候就是该事务管理器的类型不同,配置的方式都是一样的 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 关联数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 2、配置事务属性,关联上事务管理器 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
            <!-- 根据特定方法名，设置事务级别，一般都是默认的 -->
            <tx:method name="testPrivateAccountUpdate" propagation="REQUIRES_NEW"></tx:method>
            <!-- 根据方法名开头，设置一些属性，例如素有get、find、select都设置只读 -->
            <tx:method name="get*" read-only="true"></tx:method>
            <tx:method name="find*" read-only="true"></tx:method>
            <tx:method name="select*" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!-- 3、配置事务的切入点，以及把事务切入点和事务属性关联起来,也就是配好的事务作用在哪些类的那些方法上 -->
    <aop:config>
        <!-- jdbcbyxml包下JdbcService类的所有方法,正常情况下应该有一个service包的服务层，该切入点管理的是整个服务层中所有的类  -->
        <aop:pointcut id="pointcut" expression="execution(* springstudy.myspring4.jdbcbyxml.JdbcService.*(..))"/>
        <!-- 将事务切入点和事务属性关联起来 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"></aop:advisor>
    </aop:config>

</beans>